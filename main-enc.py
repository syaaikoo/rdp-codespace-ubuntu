#!/usr/bin/env python3
import gzip, base64, sys, os, types
__NAME__ = '__main__'
# base64 compressed payload (gzip)
_PAYLOAD = """H4sIAGuE6mgC/+VcfXPbuNH/X58CYccN1VqUnbs4iabqjWMriRvH1tjO9W4cDwciIQkRRbIEKVn14+/+7AIgCVKUbOdyvek0M2fxBdg3LH67WID3p2fdTCTdEQ+7LFyQeJVOo/CH1jiJ5sR1x1maJcx1CZ/HUZISGoZRSlMehaKlH0XFlVgVlwnLr+KApuMomReNplnKg+IuG8VJ5DFR9Ez5vOgbRJMJDydKmJim04CPckmGcKteTFgaUyHyF/q21To7/HToHg5PTz4eXp6QPrESP+54id/xmZhZreOTi8HHq/OLE/fnwdnP8B4p2qAyD0DhtpMwEQULZredmCYsTEmXWAswkdW6Ojw7PnQvBoNfBkdI99OR+/b8/Ory6uJwOBwcW63h4cfBlTv89erD+Zn7z8N/nLyFZtdWwr2ptUssGvAF64DeE+AhrJtWy2djIphPw4nrcxe52G3S+TsZRVHQaxH4lzAYiJDYUypomiY22BooJYwGbpywMb+12iRKcAgcdU+e9eXdiAqmm7QVIzSkq8ZZscI/wDfpSRNIxnihGPNxMYQO0EvZHETrg9b/5KEfLYWlmhky5uTQYJdewuNUWHitWDrsllmtDc3BC42mlpJ3lNF0o6BnUci0oGr4sY28H2U88FkClsdHziBcvFVP7CVHA/C4f5VkbJd4AaNJ/x0NBNxk8SShPlO3bZOQ44G1U1YIoV7GK2Cw0aKqTenkTpKF9rWA8YtXbRi/zhz9gYUCJhkIhDedjhbButklIvWjLO0bBI4HP599Pj2Vr1iSNLx6HE/NjYcipUFQZYw3/zIaCRioOAVXFHi3nDIWgHDFsBv/vkVeGIAp82a5xZWL8tgVLFzRGIRWo70LVvZmdMJEjwRcpKjRTc0FvLmPE+0Ruv5LaexzQUcBzEUedxYsEYBrHSmNeh1GHR7GWQp3f8m53zSZFxjvfjflPTZzY5bwMKVTpLxF4SkPADNQZ1Qd5qg0AQ/xR+DUVWjrLKcAPUirTbiQ/W/yya1IlJPYA2iPAgYoAgLYQxqywK4M9di6HkWBD9PXv/Gi+ZyGPplQMmMADVmP3D3fJc+drxEPbUW6fX/dLTp8Ca0KMQuUJQGdcOKzKUDgPKNwFbPQh0nBSebTKUlZAoCOeo5YkMGIViikPA1Y3zrWnbwVGSRJlJRs2u3iEvGQ3fLU3temBnxNwazgZnUwGUNcc2AW8wQgC0KKbYK+AsD9NejLu0KMXIPzsm018DjzGQCFrWKM0JAEQorUjWbytpS/RMIqjbKFOXHqoFTrs0vWw1RJqNT+2tT8hkjFS36N8LdJOiR6y7yFXczQcq7mgRemGg4TTSaL6/3ezY3qzWB69Jq0lEFbjSvzshRn8wbNWsZgt1TmgAHZ0Q6fx48jdWs0iHEOlGkH3BgvJcf85RXemD3hKk6LrvJOvZYpgJunAEV2JZ+OaNJq5VL1c4Fs7bIUHM3ViZFdi9Wg/5zmmYzVXdCkCy0hM+iSSjKkwJKig9JQt3em0RyYQNOx5dxVmt/LmAyUhBp48Fc2S6OEoxzQXbKVb9JkVY5SpdlT3Dz7yqUzAOkqK5DCWVpr7ZxlwlPmpuw2ta1oZq1TcrIw4OHMnnMhwG5VluzWYzBKA/kDEWCDBiBNbrLfpqL0c0VwTT1MTTFHdXDcZGs91JjHcQ98YcwnJR4HbMGCft7k5OzdeQmOmLHRtG/t2FR4mFW3Bfk/smPLPiEt7ufggBDY2sIA1imAegDxsH9dwdqc0TvQ4INqYufagKqhF/nwum9l6bjz2mrvNna+TCGPmufdceqqwGk018lFu2IAHo4j2zqNJj2yg4kIIkfOXGO8zijzp63Wu5PTgXt6/h5MXZ03ai4t6Vc+chPAhWb8B9xnGffhJSTTe9tjpBEVlxHnRMwg84VQzMGYSSZgqL9SCIczmHAxnVFokPlRF3k/M+Ij6KUD2gc6I4czwYS1LYApDcC3s1uXxk1qrCXv4FpLMLzUyZI9rUdr5mWALyNImkAdIvuSGZ01K3B+uUlyLVklN7FA+g7Y2yoylEcLpXuWSQgkVYWc0ugorc9GnIbdbJSFadYo8JDOkP+D1qaJN3Xp3D/4sW5ufIPxMDf5nHpTHrLS5rnqsiFmCZCq2dbt6wP34Ee5MkSqVnu76mYCRiFnTQFCsoTcIdF7tILP/WyWhTAlR7B8nxJJtau4NGp+WFDZqn7uwJXs1EhOdwnCF7i94D2cnpgrABM6ohx7MczLenJNC2/0egsXSpA/eNMeiO2lgEhoTniPP9K8wEnZA5tOKIyfClpGfuZF8ao0bkmyUMXs6mSxj+u4opnq+DXzM5SrUAGX05ZUGfNpleg6jqNQGZeQZbi293NTSiqATTEPQ5b0LR9SDndJFziNCRUEGpdSVaKlzGtgcQAi1BYXawstXG20Hl56DU+Gg8Z2taVIczuMpiqGrb0Cy/VNi1ZbtCt3iEDAR2N8b41WFd2PPh2Ty6vj889XxN4RbY30FoR9uaDABcyuSQ9+YKzs9kaeoOpmnkuahBgNcraDi4tHsAWSzWwTHDvZSsUhiIas9MBakoHOwHqNAZLlbWzrPZ3QgNScUIuHUq3z3y+9C0K+IwLGYnvPefHSWEVQA4mgE8Y2gqs4BKTqZN2AQyYCSRF7BqyQu2IK3RM78fp3iXffdohc6WH0vsuj8r1VCduJpzNciGOgHODsRGxBlzVwAO3vrOPB25PDM/fdxfnZ1eDs2OoRK4zAeLCIpJAFLWR1QzcaXpzAGuXqV2zkQQrJPSqrA4fDK/f05PLq6MPh2fvBZZ0Ys+5VGgyL0kQW9vLYhUWDlfwbSTbxbNLrfRasM0xX/T3rxtR2HUwVvb+SXHdD4X5xZSAmzkGNzAuAIujO3UywBHM7O78oTbVWS0yYM86CYI607MS6pp1/uzf4d6/zxu3c/AVUyKnIoIzugaicVxFFKj1FTFkQAAqKaQPTMjau63tteVMhC6IdOd1kDRrpGIxh1C1AmBTSJWQDAZ7oFhVH1dm1FAwWIyM6dTG9ggx2q0yQpyccRnBs3eXN7vH54elp34Y/PfivjXd52QJXuhjVuiz1upqDtb7ykdEhilkoF+EY162G9BghYFyFgLFaythSsHLGNtluwZG/tJ6HpUJZSclFqpvHqGZuXu004M9E4k8oLVoQbz86O2nqLosYpLT3bg4MWAF6VikV1dGiyFcKSbaVdrBWglyqHoBlRCGWUeI3OUSl9HZtcR/ti/2pX1zOI3npTSUhfa38WI+Jrlk0pq0jPgMkRzrkz0SPoEhXqJXUfJIwFpaaAngUOVmTFygJO1ltyqBJ8X7DPCmixeNJllBUECewGt7CoAwuva2ObJhXlmtNPUprWZttYAxKh76XBWtlV5OSQgXEj0mSxcrym0lqjLE6gQc/Y4t504g8L522d5d70f1zSFkLX7hR1fLCxzSLbVipWmwArWLHRshaYlEYtbf7bR6PtCNiQAUzybRXiqgucR2KCx6jjVEi90eZ6Nzu78uSvySGlXRVh/XLYqsMWlZVTi/xHxBwqaOlDxEylzJLMP22pmkai1636wfOJIomMH8g7enKtWYXyyVe2vWmSTRnnYTNo5TJ3bw0il0vS7DwolZmDiz3dLGKjZDsk/oknusHG6ZHLrrcQgCZ8fLcwgkyQgv50RJwi/rk6OLYMiYCEpSJFqwqMJDKEh30aTuyQiTs9hNK8GsQW3KVapILqSY5Vmo+VH+X2VEIbvtnOQjhipIVpSUIHefUVWXdQN0iZOCLPFyYJgD/gAgr81UgvbkcsBGNpIegjXlpY+2FaOGnwY9y8s7Y3A1Cgrhdavh0OXTlKG0qIFbnp/IqlW3OUj7ORzXmAZ+qUqssAjtUzMoh1cPprWh484lmRNOBQQAtIeOnP+kRlC2MMh2gEoclXP/amqltu9uxJ38nIXiBJWF7TLMg7esnqqxWr0YU0vU1BaPSXtUM39p5Rb7WE0XY2BFebuqnJNvYU762m3YBHigLDTWPCVXpcWPl43iw7tRrqUSjEbYCL4YuHUJU2c1LgyoaG0iL9GT1RzPo4JZ98aIDvjTnIQ1MAFZd2sam53MZoizcBSEyO/1lf7/7i4D1PS42iyMeiqR+bJG/q7aN4Ji3ev7IKAly5OEPenI5+395dzSoBBhksShdtKrclMaZILUXm4wmPMyUBF1AbmBaxny+OcCXo4J2V7vAeBnwyTT15w7E3wVMLUkZFkiIMES/27b2aPL6pzsKLhh8v4NtEhZHgqdRssrdB0IJkMWCdt0k8LgTB1TMaT6E+VNc5plG+ghuP5QtyTt8ZcYpJP7oavcK0ploeWPQg9kGaSEWXFF0tTXkkCuVfWUhx112pt75WZBhoHEcR89NTc6cjE2D12AcTGo0cctI9yoMtwSLbVmS0iMnXrZXtnrxXUeC2JncMjfYFKPyojYsj4BAFY+bWTUX7T82AWJTwH4S6oBhklQbBFPK3x13QI3/YdjRIfM7Aw8Xrto8wXRaXVm4f1HsduQX69sdRdeeOXukmE3TR7Utpo5h5vdn558G5LNiXp8jit6TJokGnCpDjWHbUIt+3Y5a/1nk+hb0MsfgxbcPQgNg1QakCbaeCl0mx2bcUi0akasJvZ6MYAodviFvqqas27y+yqJ8gCUDeevPf1gfhsuUhrDG8r/jbFCEq4H8f3wy/Lax+Q9Okv+y2fFt0V2q818ZoZVJftfimHre0cYX8nzaA7Wxp3T5LqUxyegPq479YeUwVZv7PStiyrBPK4pV7VkNBfXCmKTfAPZPrrCZHvDIIptPx7CMkMVlLI/r3Rwvid1iX1zt7/DwEVs7xqaByNQhdz2xn7LR0AhxeufBjF+4W5JvPWwvWzZikhSwo+mqHT/clbgzlL8nnQ5o3r+DP/fS5AmbcDzuCqA5jURqVDUbeWj1tyhlyWWcpA1zIqCQ+wd0RUNAQEXbRLqFwOMPlVJofT94CTaolUTrlVDtQkRRI18zyErCyYTOfiIjThOidlQJRleRwQUoO6vWSo0aqUwvwkpVNCxBSMtTOR23aj7h/XS8pv9+dfDjizcvnUXkzAXzQt8BgOkqqO0evHlJx3tvXnmvRv7em9fj0Xhv/5XHfqDe65ds781o5L30fbp30JUm3XdevXFedPYPXh+8+uHH/Tcvm1FdzipEGAc3kr4bdquR+AOwWzH+Nux+9tvBW3vgBvA2nONbcFsb9XfDbUX/O+B2ZfQfidswqUI5oyrTHzyfoS/KI/O2HhxM7i6Oh+RESSD3r8U0WuIBV5jC+sjglFGfJa6xa261S5oOLCsAFINsHtrWCeRy5QY7QgLchZG7TGhsmHe94xkHfCt7ql35euMkWtp4zHW3qQbS2HiovmvbldFef3DkiDiAsN++3rtp7PMzfnOojjvXvqtobH4aTXTr/OBEu+k4guylR2jM8Wz0jLHYlUca62Mlz1Proy+P+EjSi7OOzyksCgR10tvUaj049bX3SjPfvENxCIqjTlgSGT/ylY1qY05+K5QHhFJOY3KwB+4KWTmpCwFuOMP5zDnEQzxsiC12VRSRR2YpxhXgOJ4RgV9RLGLRXcwrfFKG2X5loh2lSfDXo+q0UidchAyardpnSh9Rq0PUSu/FtRtOD03x2wf0zuqCsDxVVAzIE44WSQpgSSzfqaOBaTLGC9va+bWzM+/s+GTnQ2/nU2/n0mo3nJmkPl1M5JHe9WVqnEmTNr5cO+W6ro/VxWOTXc1DiR+Mm3tVhQnG4ILUB//TRzIfx0kLrDh5WziVmnkPcnrEEc8Ga551D63WdtZjSwYrcGGP5o975I7dr3fMD5CNrX6/T+7kgN8TuP4SNgxq2foUY9whIBKdMCCt5bt/oNfR8DNgNQjzJbzTckGXtU7GSdSDvcoptI9sNYpo4p9g2IbkON0Y3r6ElXlnoIP8RtDnU0AfjJ1rIU5C3Byy1bUQZDpmHqXKWVj/sqL2xvwKoPZKfVBSalJJF6s5yzeeMKueuDaL+nmWsdxW5K+ueJqr/uXHONvP+1mfqMiKM20S+ih+toKB3NhXkh8uZbgaqR14GwUZM9Ow/OjT5oXB57yFPc2SbAyRwuNBF/B7Rrtut9PuVVYA6/NVf6C5+cxs+0mbbIU4+UEDBz/ZSyO17Ovs7TeW5H7W3B/aZ9MnIuRpMjCJ/p8bQCaRP7N9Lth8lIUr9P52jzRrHMjDqKpPm/yNHDxJx4LbnId8DnH0gMworutY8pu1Wz+oWZ7RfMD1rtg8hiwyn1wE81RZJcBPfjBTfy8rW7XjUMSGdXO7FFYuXg1OSbzZ94Y5K0xVbRjxTCBfCot7uf5+0PmgzRbqJ2fEPujsvwA8m/D0sZ4MEm8bTXMcTfElWKmMyBzEh0dMs62dH//i3x3s7r/AY7rSEI+UCFRWH8iVehM5l58mU6N/DNXySp5zhBUhKI0f8DQduG23188flYct6+/kAcdNB5bMksdaR13/LT8grRa1lPfDeCobbtcOV0oy+H2lPn/2JXybzWiP5CUHVb7RQpnVYurhVz/bjx1fZvUvDzeXdYyjGrKCYiwkNpx3q595O0RCPFTrECPx/6lIzyErh3WbTPPXEnuf692dygJgw4m56qm5xopQa/1DprI8ZChXVIr6tUqRWjLVl1TfJe3x+YjCylhH28bV/ANZaMMhf1lsQCuDMH42oU844I87hPqzPkhHv4RN3/gUTrX9oB3Y2HXR/11XWtR1MWdzXW1YlcC1/h8HK2y1rkgAAA=="""

def _run():
    # decode and decompress
    compressed = base64.b64decode(_PAYLOAD)
    src = gzip.decompress(compressed)
    # prepare globals with correct __file__ and __name__
    script_path = os.path.abspath(__file__)
    g = {
        '__name__': '__main__',
        '__file__': script_path,
        '__package__': None,
        '__cached__': None,
    }
    # execute compiled code
    code = compile(src, script_path, 'exec')
    exec(code, g)

if __name__ == '__main__':
    _run()
